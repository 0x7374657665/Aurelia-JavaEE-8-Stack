{"version":3,"sources":["src/app.js","src/book-list.js","src/environment.js","src/main.js","src/resources/index.js"],"names":["App","client","configure","conf","withBaseUrl","host","books","bookTitle","activate","get","then","JSON","parse","data","response","filter","book","title","length","addBook","description","Date","status","rating","post","console","log","push","BookList","debug","testing","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","config"],"mappings":";;;;;;;;;;;;;;;;;;;;;;MAGaA,cAAAA;AAEX,mBAAc;AAAA;;AACZ,WAAKC,MAAL,GAAc,oCAAiBC,SAAjB,CAA2B,gBAAQ;AAC/CC,aAAKC,WAAL,CAAiB,sBAAYC,IAA7B;AACD,OAFa,CAAd;;AAIA,WAAKC,KAAL,GAAa,EAAb;AACA,WAAKC,SAAL,GAAiB,EAAjB;AACD;;kBAEDC,+BAAW;AAAA;;AACT,WAAKP,MAAL,CAAYQ,GAAZ,CAAgB,UAAhB,EAA4BC,IAA5B,CAAiC,gBAAQ;AACvC,cAAKJ,KAAL,GAAaK,KAAKC,KAAL,CAAWC,KAAKC,QAAhB,EAA0BC,MAA1B,CAAiC;AAAA,iBAAQC,KAAKC,KAAL,CAAWC,MAAX,GAAoB,CAA5B;AAAA,SAAjC,CAAb;AAED,OAHD;AAID;;kBAEDC,6BAAU;AAAA;;AACR,UAAMH,OAAO;AACXC,eAAO,KAAKV,SADD;AAEXa,qCAA2B,CAAE,IAAIC,IAAJ,EAFlB;AAGXC,gBAAQ,IAHG;AAIXC,gBAAQ,CAAC;AAJE,OAAb;;AAOA,WAAKtB,MAAL,CACGuB,IADH,CACQ,MADR,EACgBR,IADhB,EAEGN,IAFH,CAGE,oBAAY;AACVe,gBAAQC,GAAR,CAAYZ,QAAZ;AACA,eAAKR,KAAL,CAAWqB,IAAX,CAAgB,EAAEV,OAAO,OAAKV,SAAd,EAAhB;AACA,eAAKA,SAAL,GAAiB,EAAjB;AACAkB,gBAAQC,GAAR,CAAY,YAAZ,EAA0B,OAAKpB,KAA/B;AACD,OARH;AAUD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCrCUsB,mBAAAA;;;;;;;;;;;;;;;oBCFE;AACbC,WAAO,KADM;AAEbC,aAAS,KAFI;AAGbzB,UAAM;AAHO;;;;;;;;UCECH,YAAAA;;;;;;;;;;AAAT,WAASA,SAAT,CAAmB6B,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYL,KAAhB,EAAuB;AACrBE,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYL,OAAhB,EAAyB;AACvBC,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgB3B,IAAhB,CAAqB;AAAA,aAAMqB,QAAQO,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UChBepC,YAAAA;AAAT,WAASA,SAAT,CAAmBqC,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["import environment from './environment'\nimport { HttpClient } from 'aurelia-http-client'\n\nexport class App {\n\n  constructor() {\n    this.client = new HttpClient().configure(conf => {\n      conf.withBaseUrl(environment.host)\n    })\n\n    this.books = [];\n    this.bookTitle = \"\";\n  }\n\n  activate() {\n    this.client.get('book/all').then(data => {\n      this.books = JSON.parse(data.response).filter(book => book.title.length > 0)\n\n    })\n  }\n\n  addBook() {\n    const book = {\n      title: this.bookTitle,\n      description: `Created at ${+ new Date()}`,\n      status: 'OK',\n      rating: -1\n    }\n\n    this.client\n      .post('book', book)\n      .then(\n      response => {\n        console.log(response)\n        this.books.push({ title: this.bookTitle });\n        this.bookTitle = \"\";\n        console.log(\"Book List \", this.books);\n      })\n\n  }\n\n}\n","import {bindable} from 'aurelia-framework'\r\n\r\nexport class BookList {\r\n    @bindable books\r\n\r\n}","export default {\n  debug: false,\n  testing: false,\n  host: 'api/'\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}